"""Rename tables to snake_case plural

Revision ID: 033faf89f4e5
Revises: bc311ce7dcf8
Create Date: 2025-07-09 12:42:30.969452

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '033faf89f4e5'
down_revision = 'bc311ce7dcf8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Get database connection to check if we're using SQLite or PostgreSQL
    conn = op.get_bind()
    
    # Check if we're using SQLite
    if conn.dialect.name == 'sqlite':
        # SQLite: Use op.rename_table which handles foreign key updates automatically
        
        # Rename user table to users
        op.rename_table('user', 'users')
        
        # Rename goal table to goals  
        op.rename_table('goal', 'goals')
        
        # Note: SQLite's rename_table operation automatically updates foreign key references
        # No need to manually update foreign key constraints
    
    else:
        # PostgreSQL supports ALTER TABLE RENAME
        op.execute('ALTER TABLE "user" RENAME TO "users"')
        op.execute('ALTER TABLE "goal" RENAME TO "goals"')
        
        # PostgreSQL foreign key constraints will still reference the new table names
        # No need to update them as they reference by name
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Get database connection to check if we're using SQLite or PostgreSQL
    conn = op.get_bind()
    
    # Check if we're using SQLite
    if conn.dialect.name == 'sqlite':
        # SQLite rollback - reverse the table renames
        
        # Rename tables back to original names
        op.rename_table('goals', 'goal')
        op.rename_table('users', 'user')
        
        # SQLite's rename_table operation automatically handles foreign key updates
    
    else:
        # PostgreSQL rollback
        op.execute('ALTER TABLE "goals" RENAME TO "goal"')
        op.execute('ALTER TABLE "users" RENAME TO "user"')
    
    # ### end Alembic commands ###
